{
    "filters": {
        "revapi": {
            "java": {
                "filter": {
                    "classes": {
                        "regex": true,
                        "exclude": []
                    }
                }
            }
        }
    },
    "ignores": {
        "revapi": {
            "_comment": "Changes between 7.44.0.Final and the current branch. These changes are desired and thus ignored.",
            "ignore": [
                {
                  "code": "java.method.removed",
                  "old": "method boolean org.kie.api.internal.utils.ServiceDiscoveryImpl::isKiecConfDiscoveryAllowed()",
                  "package": "org.kie.api.internal.utils",
                  "classSimpleName": "ServiceDiscoveryImpl",
                  "methodName": "isKiecConfDiscoveryAllowed",
                  "elementKind": "method",
                  "justification": "service discovery refactor"
                },
                {
                  "code": "java.method.removed",
                  "old": "method void org.kie.api.internal.utils.ServiceDiscoveryImpl::setKiecConfDiscoveryAllowed(boolean)",
                  "package": "org.kie.api.internal.utils",
                  "classSimpleName": "ServiceDiscoveryImpl",
                  "methodName": "setKiecConfDiscoveryAllowed",
                  "elementKind": "method",
                  "justification": "service discovery refactor"
                },
                {
                  "code": "java.class.removed",
                  "old": "class org.kie.api.internal.utils.ServiceRegistryImpl",
                  "package": "org.kie.api.internal.utils",
                  "classSimpleName": "ServiceRegistryImpl",
                  "elementKind": "class",
                  "justification": "service discovery refactor"
                },
                {
                  "code": "java.method.returnTypeTypeParametersChanged",
                  "old": "method java.util.Map<java.lang.String, java.lang.Object> org.kie.api.internal.utils.ServiceDiscoveryImpl::getServices()",
                  "new": "method java.util.Map<java.lang.String, java.util.List<java.lang.Object>> org.kie.api.internal.utils.ServiceDiscoveryImpl::getServices()",
                  "oldType": "java.util.Map<java.lang.String, java.lang.Object>",
                  "newType": "java.util.Map<java.lang.String, java.util.List<java.lang.Object>>",
                  "package": "org.kie.api.internal.utils",
                  "classSimpleName": "ServiceDiscoveryImpl",
                  "methodName": "getServices",
                  "elementKind": "method",
                  "justification": "service discovery refactor"
                },
                {
                  "code": "java.method.addedToInterface",
                  "new": "method <T> java.util.List<T> org.kie.api.internal.utils.ServiceRegistry::getAll(java.lang.Class<T>)",
                  "package": "org.kie.api.internal.utils",
                  "classSimpleName": "ServiceRegistry",
                  "methodName": "getAll",
                  "elementKind": "method",
                  "justification": "service discovery refactor"
                },
                {
                  "code": "java.method.addedToInterface",
                  "new": "method org.kie.api.runtime.process.ProcessInstance org.kie.api.runtime.process.ProcessRuntime::startProcess(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, org.kie.api.runtime.rule.AgendaFilter)",
                  "package": "org.kie.api.runtime.process",
                  "classSimpleName": "ProcessRuntime",
                  "methodName": "startProcess",
                  "elementKind": "method",
                  "justification": "allow to use an agenda filter when starting a process"
                },
                {
                  "code": "java.method.addedToInterface",
                  "new": "method org.kie.api.runtime.process.ProcessInstance org.kie.api.runtime.process.ProcessRuntime::startProcess(java.lang.String, org.kie.api.runtime.rule.AgendaFilter)",
                  "package": "org.kie.api.runtime.process",
                  "classSimpleName": "ProcessRuntime",
                  "methodName": "startProcess",
                  "elementKind": "method",
                  "justification": "allow to use an agenda filter when starting a process"
               },
               {
                 "code": "java.method.addedToInterface",
                 "new": "method java.util.Set<java.lang.String> org.kie.api.builder.model.KieBaseModel::getIncludes()",
                 "package": "org.kie.api.builder.model",
                 "classSimpleName": "KieBaseModel",
                 "methodName": "getIncludes",
                 "elementKind": "method",
                 "justification": "generate ProjectModel for executable model"
              },
              {
                "code": "java.method.addedToInterface",
                "new": "method org.kie.api.command.Command org.kie.api.command.KieCommands::newApplyPmmlModel(org.kie.api.pmml.PMMLRequestData)",
                "package": "org.kie.api.command",
                "classSimpleName": "KieCommands",
                "methodName": "newApplyPmmlModel",
                "elementKind": "method",
                "justification": "Move newApplyPmmlModel to publicly available API to avoid downcasting"
              }
            ]
        }
    }
}

